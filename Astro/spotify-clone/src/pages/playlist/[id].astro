---
import Layout from "../../layouts/Layout.astro";
import { allPlaylists, songs } from "@/lib/data";
import Image from "astro/components/Image.astro";
import {MusicsTable} from "@/components/MusicsTable.tsx";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);
const playListSongs = songs.filter(
  (song) => song.albumId === playlist?.albumId
);
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden bg-gradient-to-t from-50% from-zinc-900 via-zinc-900/80"
    transition:name=`playlist-id-${id} box`
  >
    <header class="flex flex-row gap-8 px-6 mt-12">
      <picture class="aspect-square w-52 h-52 flex-none">
        <Image
          src={playlist?.cover as string}
          width={52}
          height={52}
          alt={`Cover of ${playlist?.title}`}
          class="object-cover w-full h-full shadow-lg"
          transition:name=`playlist-id-${playlist?.id} image`
          loading="eager"
        />
      </picture>
      <div class="flex flex-col justify-between">
        <h2 class="flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="text-5xl font-bold block text-white">
            <span transition:name=`playlist-id-${playlist?.id} title`
              >{playlist?.title}</span
            >
          </h1>
        </div>
        <div class="flex-1 flex items-end">
          <div class="text-sm text-gray-300 font-normal">
            <div transition:name=`playlist-id-${playlist?.id} artists`>
              <span>
                {playlist?.artists.join(", ")}
              </span>
            </div>
            <p class="mt-1">
              <span class="text-white">{playListSongs.length} canciones</span>
              3 h aproximadamente
            </p>
          </div>
        </div>
      </div>
    </header>
    <div
      class="absolute inset-0 h-96 bg-gradient-to-b from-green-600 to-zinc-900 -z-10"
    >
  </div>
  <section class="p-2">
    <MusicsTable client:load songs={playListSongs} playlist={playlist}/>
  </section>
  </div>
</Layout>
